{"version":3,"sources":["../src/epict_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","_","scaleQuantize","panelDefaults","bgColor","boxes","EpictCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","onDataReceived","onDataSnapshotLoad","render","addEditorTab","scope","ctrl","forEach","box","usingThresholds","rawValue","parseInt","thresholds","split","color","colorLow","blinkLow","isBlinking","colorHigh","blinkHigh","colorMedium","panelData","series","map","seriesHandler","wantedSerie","filter","oneSerie","alias","serie","datapoints","length","nf","Intl","NumberFormat","numberBeforeFormatting","toFixed","decimal","formattedNumber","format","text","snapshotData","seriesData","target","flotpairs","getFlotPairs","nullPointMode","push","xpos","ypos","fontsize","prefixSize","suffixSize","hasOrb","orbSize","orbHideText","orbLocation","console","log","$index","splice","e","ctrlKey","alert","offsetX","offsetY","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"epict_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport _ from 'lodash';\r\nimport { scaleQuantize } from 'd3';\r\n\r\nconst panelDefaults = {\r\n  bgColor: null,\r\n  boxes: []\r\n};\r\n\r\nexport class EpictCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n   \r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\r\n    this.events.on('panel-initialized', this.render.bind(this));\r\n    this.events.on('render',this.render.bind(this));\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/larona-epict-panel/editor.html', 2);\r\n  }\r\n\r\n  onPanelTeardown() {\r\n  }\r\n\r\n  render(){\r\n\tthis.scope.ctrl.panel.boxes.forEach(function(box){\r\n\t\tif(box.usingThresholds==true){\r\n        \t\tif(box.rawValue <=parseInt(box.thresholds.split(',')[0])){\r\n\t\t\t\tbox.color=box.colorLow;\r\n\t\t\t\tif(box.blinkLow){\r\n\t\t\t\t\tbox.isBlinking=true\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbox.isBlinking=false;\r\n\t\t\t\t}\r\n\t\t\t}else if(box.rawValue >=parseInt(box.thresholds.split(',')[1])){\r\n\t\t\t\tbox.color=box.colorHigh;\r\n\t\t\t\tif(box.blinkHigh){\r\n\t\t\t\t\tbox.isBlinking=true\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbox.isBlinking=false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbox.color=box.colorMedium\r\n\t\t\t\tbox.isBlinking=false;\r\n\t\t\t}\r\n\t\t\t//alert(box.rawValue);\r\n\t\t}else{\r\n\t\t\tbox.isBlinking=false;\r\n\t\t}\r\n\t});\r\n\t\r\n//\talert(\"yes\");\r\n  }\r\n\r\n  onDataReceived(panelData) {\r\n\r\n    // console.log(panelData);\r\n    this.series = panelData.map(this.seriesHandler.bind(this));\r\n    // console.log(this.series);\r\n    //Assigner valeur\r\n    this.panel.boxes.forEach(box => {\r\n     var wantedSerie = this.series.filter(function (oneSerie) {\r\n        return oneSerie.alias == box.serie;\r\n      });\r\n      if(wantedSerie != null && wantedSerie[0]!=null && wantedSerie[0].datapoints.length!=0)\r\n      {\r\n\tif(wantedSerie[0].datapoints[wantedSerie[0].datapoints.length - 1][0]!=null){\r\n\t\tvar nf = new Intl.NumberFormat();\r\n        \tvar numberBeforeFormatting=wantedSerie[0].datapoints[wantedSerie[0].datapoints.length - 1][0].toFixed(box.decimal);\r\n        \tbox.rawValue=wantedSerie[0].datapoints[wantedSerie[0].datapoints.length - 1][0]  //Used to determine the color if the Threshold is enabled\r\n\t\tvar formattedNumber = nf.format(numberBeforeFormatting);\r\n        \tbox.text = formattedNumber;\r\n\t}else{\r\n\t\tbox.text=\"-\";\r\n\t}\r\n      }else{\r\n        box.text=\"N/A\";\r\n      } \r\n      // console.log(wantedSerie);\r\n      // alert(wantedSerie[0].datapoints[wantedSerie.length-1]);\r\n    }); \r\n    this.render();\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    const series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target,\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    \r\n    return series;\r\n  }\r\n\r\n  addBox(){\r\n    this.panel.boxes.push({serie:\"A-series\",text:\"N/A\",xpos:0,ypos:0,fontsize:12,prefixSize:10,suffixSize:10,color:\"#000\",decimal:1,usingThresholds:false,thresholds:'20,60',colorLow:\"#0f0\",colorMedium:\"#fa1\",colorHigh:\"#f00\", hasOrb:false, orbSize:\"10\", orbHideText:false, orbLocation: \"Left\"});\r\n    \r\n    console.log(this.panel.boxes);\r\n  }\r\n  deleteBox($index){\r\n     this.panel.boxes.splice($index,1);\r\n  }\r\nclicktest(e){\r\n  if(e.ctrlKey){\r\n    alert(\"X:\"+e.offsetX+\" Y:\"+e.offsetY);\r\n  }\r\n}\r\n\r\n  link(scope, elem) {\r\n    this.events.on('render', () => {\r\n      const $panelContainer = elem.find('.panel-container');\r\n\r\n      if (this.panel.bgColor) {\r\n        $panelContainer.css('background-color', this.panel.bgColor);\r\n      } else {\r\n        $panelContainer.css('background-color', '');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nEpictCtrl.templateUrl = 'module.html';\r\n"]}