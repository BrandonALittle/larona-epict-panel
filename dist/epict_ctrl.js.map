{"version":3,"sources":["../src/epict_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","_","scaleQuantize","panelDefaults","bgColor","boxes","EpictCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","onDataReceived","onDataSnapshotLoad","render","addEditorTab","scope","ctrl","forEach","box","usingThresholds","rawValue","parseInt","thresholds","split","color","colorLow","blinkLow","isBlinking","colorHigh","blinkHigh","colorMedium","panelData","series","map","seriesHandler","wantedSerie","filter","oneSerie","alias","serie","datapoints","length","nf","Intl","NumberFormat","numberBeforeFormatting","toFixed","decimal","formattedNumber","format","text","snapshotData","seriesData","target","flotpairs","getFlotPairs","nullPointMode","push","xpos","ypos","fontsize","prefixSize","suffixSize","console","log","$index","splice","e","ctrlKey","alert","offsetX","offsetY","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"epict_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport _ from 'lodash';\nimport { scaleQuantize } from 'd3';\n\nconst panelDefaults = {\n  bgColor: null,\n  boxes: []\n};\n\nexport class EpictCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n   \n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n    this.events.on('render',this.render.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/larona-epict-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n  }\n\n  render(){\n\tthis.scope.ctrl.panel.boxes.forEach(function(box){\n\t\tif(box.usingThresholds==true){\n        \t\tif(box.rawValue <=parseInt(box.thresholds.split(',')[0])){\n\t\t\t\tbox.color=box.colorLow;\n\t\t\t\tif(box.blinkLow){\n\t\t\t\t\tbox.isBlinking=true\n\t\t\t\t}else{\n\t\t\t\t\tbox.isBlinking=false;\n\t\t\t\t}\n\t\t\t}else if(box.rawValue >=parseInt(box.thresholds.split(',')[1])){\n\t\t\t\tbox.color=box.colorHigh;\n\t\t\t\tif(box.blinkHigh){\n\t\t\t\t\tbox.isBlinking=true\n\t\t\t\t}else{\n\t\t\t\t\tbox.isBlinking=false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tbox.color=box.colorMedium\n\t\t\t\tbox.isBlinking=false;\n\t\t\t}\n\t\t\t//alert(box.rawValue);\n\t\t}else{\n\t\t\tbox.isBlinking=false;\n\t\t}\n\t});\n\t\n//\talert(\"yes\");\n  }\n\n  onDataReceived(panelData) {\n\n    // console.log(panelData);\n    this.series = panelData.map(this.seriesHandler.bind(this));\n    // console.log(this.series);\n    //Assigner valeur\n    this.panel.boxes.forEach(box => {\n     var wantedSerie = this.series.filter(function (oneSerie) {\n        return oneSerie.alias == box.serie;\n      });\n      if(wantedSerie != null && wantedSerie[0]!=null && wantedSerie[0].datapoints.length!=0)\n      {\n\tvar nf = new Intl.NumberFormat();\n        var numberBeforeFormatting=wantedSerie[0].datapoints[wantedSerie[0].datapoints.length - 1][0].toFixed(box.decimal);\n        box.rawValue=wantedSerie[0].datapoints[wantedSerie[0].datapoints.length - 1][0]  //Used to determine the color if the Threshold is enabled\n\tvar formattedNumber = nf.format(numberBeforeFormatting);\n        box.text = formattedNumber;  \n      }else{\n        box.text=\"N/A\";\n      } \n      // console.log(wantedSerie);\n      // alert(wantedSerie[0].datapoints[wantedSerie.length-1]);\n    }); \n    this.render();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints || [],\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    \n    return series;\n  }\n\n  addBox(){\n    this.panel.boxes.push({serie:\"A-series\",text:\"N/A\",xpos:0,ypos:0,fontsize:12,prefixSize:10,suffixSize:10,color:\"#000\",decimal:1,usingThresholds:false,thresholds:'20,60',colorLow:\"#0f0\",colorMedium:\"#fa1\",colorHigh:\"#f00\"});\n    \n    console.log(this.panel.boxes);\n  }\n  deleteBox($index){\n     this.panel.boxes.splice($index,1);\n  }\nclicktest(e){\n  if(e.ctrlKey){\n    alert(\"X:\"+e.offsetX+\" Y:\"+e.offsetY);\n  }\n}\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nEpictCtrl.templateUrl = 'module.html';\n"]}