{"version":3,"sources":["../src/epict_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","_","scaleQuantize","panelDefaults","bgColor","boxes","EpictCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","onDataReceived","onDataSnapshotLoad","render","addEditorTab","panelData","series","map","seriesHandler","forEach","wantedSerie","filter","oneSerie","alias","box","serie","text","datapoints","length","snapshotData","seriesData","target","flotpairs","getFlotPairs","nullPointMode","push","xpos","ypos","fontsize","color","decimal","$index","splice","e","ctrlKey","alert","offsetX","offsetY","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"epict_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\n// import moment from 'moment';\n// import './external/moment-duration-format';\nimport _ from 'lodash';\nimport './css/epict-panel.css!';\nimport { scaleQuantize } from 'd3';\n\nconst panelDefaults = {\n  bgColor: null,\n  boxes: []\n};\n\nexport class EpictCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n   \n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/larona-epict-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    // this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  onDataReceived(panelData) {\n\n    // console.log(panelData);\n    this.series = panelData.map(this.seriesHandler.bind(this));\n    // console.log(this.series);\n    //Assigner valeur\n    this.panel.boxes.forEach(box => {\n     var wantedSerie = this.series.filter(function (oneSerie) {\n        return oneSerie.alias == box.serie;\n      });\n      if(wantedSerie != null && wantedSerie[0]!=null)\n      {\n        box.text=wantedSerie[0].datapoints[wantedSerie[0].datapoints.length-1][0];   \n      }else{\n        box.text=\"N/A\";\n      }\n     \n      // console.log(wantedSerie);\n      // alert(wantedSerie[0].datapoints[wantedSerie.length-1]);\n    }); \n    this.render();\n    // this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints || [],\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    \n    return series;\n  }\n\n  addBox(){\n    this.panel.boxes.push({serie:\"A-series\",text:\"N/A\",xpos:0,ypos:0,fontsize:12,color:\"#000\",decimal:1});\n  }\n  deleteBox($index){\n     this.panel.boxes.splice($index,1);\n  }\nclicktest(e){\n  if(e.ctrlKey){\n    alert(\"X:\"+e.offsetX+\" Y:\"+e.offsetY);\n  }\n}\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nEpictCtrl.templateUrl = 'module.html';\n"]}